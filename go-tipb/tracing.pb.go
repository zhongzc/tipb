// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tracing.proto

package tipb

import (
	"fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"

	io "io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TracingEvent int32

const (
	TracingEvent_Unknown                    TracingEvent = 0
	TracingEvent_TiKvGrpcioPending          TracingEvent = 499
	TracingEvent_TiKvGrpcio                 TracingEvent = 500
	TracingEvent_TiKvSnapshot               TracingEvent = 501
	TracingEvent_TiKvTlsEngine              TracingEvent = 502
	TracingEvent_TiKvCollectMetrics         TracingEvent = 503
	TracingEvent_TiKvProposeReadRaftCommand TracingEvent = 504
	TracingEvent_TiKvPeerMessage            TracingEvent = 505
	TracingEvent_TiKvStoreMessage           TracingEvent = 506
	// Coprocessor
	TracingEvent_TiKvCoprocessor                       TracingEvent = 1000
	TracingEvent_TiKvCoprTaskPending                   TracingEvent = 1001
	TracingEvent_TiKvCoprParseRequest                  TracingEvent = 1002
	TracingEvent_TiKvCoprGetSnapshot                   TracingEvent = 1003
	TracingEvent_TiKvCoprHandleRequest                 TracingEvent = 1004
	TracingEvent_TiKvCoprHandleRequestReschedule       TracingEvent = 1005
	TracingEvent_TiKvCoprSelectionExecutorNextBatch    TracingEvent = 1006
	TracingEvent_TiKvCoprLimitExecutorNextBatch        TracingEvent = 1007
	TracingEvent_TiKvCoprTableScanExecutorNextBatch    TracingEvent = 1009
	TracingEvent_TiKvCoprIndexScanExecutorNextBatch    TracingEvent = 1010
	TracingEvent_TiKvCoprTopNExecutorNextBatch         TracingEvent = 1011
	TracingEvent_TiKvCoprStreamAggrExecutorNextBatch   TracingEvent = 1012
	TracingEvent_TiKvCoprFastHashAggrExecutorNextBatch TracingEvent = 1013
	TracingEvent_TiKvCoprSimpleAggrExecutorNextBatch   TracingEvent = 1014
	TracingEvent_TiKvCoprSlowHashAggrExecutorNextBatch TracingEvent = 1015
	TracingEvent_TiKvCoprocessorPending                TracingEvent = 1016
	TracingEvent_TiKvCoprocessorBuildFuture            TracingEvent = 1017
	// RawGet
	TracingEvent_TiKvRawGet            TracingEvent = 1100
	TracingEvent_TiKvRawGetPending     TracingEvent = 1101
	TracingEvent_TiKvRawGetBuildFuture TracingEvent = 1102
	TracingEvent_TiKvRawGetTask        TracingEvent = 1103
	TracingEvent_TiKvRawGetKeyValue    TracingEvent = 1104
	// Async_write
	TracingEvent_TiKvScheduleWriteTask               TracingEvent = 1200
	TracingEvent_TiKvEngineRunner                    TracingEvent = 1201
	TracingEvent_TiKvEngineDelete                    TracingEvent = 1203
	TracingEvent_TiKvEnginePut                       TracingEvent = 1205
	TracingEvent_TiKvEngineDeleteRange               TracingEvent = 1207
	TracingEvent_TiKvRaftKvAsyncWrite                TracingEvent = 1208
	TracingEvent_TiKvRaftKvExecWriteRequests         TracingEvent = 1209
	TracingEvent_TiKvRaftKvExecWriteRequestsCallback TracingEvent = 1216
	TracingEvent_TiKvHandlePeerRaftMessage           TracingEvent = 1217
	TracingEvent_TiKvHandlePeerRaftCommand           TracingEvent = 1218
	TracingEvent_TiKvStoreMessageDispatching         TracingEvent = 1219
	TracingEvent_TiKvPeerMessageDispatching          TracingEvent = 1220
	TracingEvent_TiKvCallbackPending                 TracingEvent = 1221
	TracingEvent_TiKvHandleStoreRaftMessage          TracingEvent = 1222
	TracingEvent_TiKvRawPut                          TracingEvent = 1204
	TracingEvent_TiKvRawPutPending                   TracingEvent = 1223
	TracingEvent_TiKvRawPutBuildFuture               TracingEvent = 1224
	TracingEvent_TiKvRawDelete                       TracingEvent = 1202
	TracingEvent_TiKvRawDeletePending                TracingEvent = 1225
	TracingEvent_TiKvRawDeleteBuildFuture            TracingEvent = 1226
	TracingEvent_TiKvRawDeleteRange                  TracingEvent = 1206
	TracingEvent_TiKvRawDeleteRangePending           TracingEvent = 1227
	TracingEvent_TiKvRawDeleteRangeBuildFuture       TracingEvent = 1228
	TracingEvent_TiKvRaftStoreOnWriteResult          TracingEvent = 1210
	TracingEvent_TiKvRaftStoreFsmPeerHandleMsg       TracingEvent = 1211
	TracingEvent_TiKvRaftStoreSendCommandTxnExtra    TracingEvent = 1212
	TracingEvent_TiKvRaftStoreRaftCommand            TracingEvent = 1213
	TracingEvent_TiKvRaftStoreProposeRaftCommand     TracingEvent = 1214
	TracingEvent_TiKvRaftStoreRaftRouterSendCommand  TracingEvent = 1215
	TracingEvent_TiKvRaftStorePeerFsmHandleMessage   TracingEvent = 1229
	TracingEvent_TiKvPrewrite                        TracingEvent = 1300
	TracingEvent_TiKvPrewritePending                 TracingEvent = 1311
	TracingEvent_TiKvPrewriteBuildFuture             TracingEvent = 1312
	TracingEvent_TiKvCommit                          TracingEvent = 1301
	TracingEvent_TiKvCommitPending                   TracingEvent = 1313
	TracingEvent_TiKvCommitBuildFuture               TracingEvent = 1314
	TracingEvent_TiKvGet                             TracingEvent = 1302
	TracingEvent_TiKvGetPending                      TracingEvent = 1315
	TracingEvent_TiKvGetBuildFuture                  TracingEvent = 1316
	TracingEvent_TiKvScan                            TracingEvent = 1303
	TracingEvent_TiKvScanPending                     TracingEvent = 1317
	TracingEvent_TiKvScanBuildFuture                 TracingEvent = 1318
	TracingEvent_TiKvCleanup                         TracingEvent = 1306
	TracingEvent_TiKvCleanupPending                  TracingEvent = 1319
	TracingEvent_TiKvCleanupBuildFuture              TracingEvent = 1320
	TracingEvent_TiKvPessimisticLock                 TracingEvent = 1304
	TracingEvent_TiKvPessimisticLockPending          TracingEvent = 1321
	TracingEvent_TiKvPessimisticLockBuildFuture      TracingEvent = 1322
	TracingEvent_TiKvPessimisticRollback             TracingEvent = 1305
	TracingEvent_TiKvPessimisticRollbackPending      TracingEvent = 1323
	TracingEvent_TiKvPessimisticRollbackBuildFuture  TracingEvent = 1324
	TracingEvent_TiKvBatchGet                        TracingEvent = 1307
	TracingEvent_TiKvBatchGetPending                 TracingEvent = 1325
	TracingEvent_TiKvBatchGetBuildFuture             TracingEvent = 1326
	TracingEvent_TiKvBatchRollback                   TracingEvent = 1308
	TracingEvent_TiKvBatchRollbackPending            TracingEvent = 1327
	TracingEvent_TiKvBatchRollbackBuildFuture        TracingEvent = 1328
	TracingEvent_TiKvGc                              TracingEvent = 1309
	TracingEvent_TiKvGcPending                       TracingEvent = 1329
	TracingEvent_TiKvGcBuildFuture                   TracingEvent = 1330
	TracingEvent_TiKvScanLock                        TracingEvent = 1310
	TracingEvent_TiKvScanLockPending                 TracingEvent = 1331
	TracingEvent_TiKvScanLockBuildFuture             TracingEvent = 1332
	// Transcation
	TracingEvent_TiKvTxnTaskDispatching   TracingEvent = 1400
	TracingEvent_TiKvTxnGetSnapShot       TracingEvent = 1401
	TracingEvent_TiKvTxnProcess           TracingEvent = 1403
	TracingEvent_TiKvTxnProcessPending    TracingEvent = 1402
	TracingEvent_TiKvTxnProcessRead       TracingEvent = 1411
	TracingEvent_TiKvTxnProcessWrite      TracingEvent = 1404
	TracingEvent_TiKvMvccPrewriteMutation TracingEvent = 1405
	TracingEvent_TiKvTxnFinishWithErr     TracingEvent = 1407
	TracingEvent_TiKvTxnOnReadFinished    TracingEvent = 1408
	TracingEvent_TiKvTxnOnWriteFinished   TracingEvent = 1409
	TracingEvent_TiKvTxnOnWaitForLock     TracingEvent = 1410
	TracingEvent_TiKvTxnOnPipelinedWrite  TracingEvent = 1412
)

var TracingEvent_name = map[int32]string{
	0:    "Unknown",
	499:  "TiKvGrpcioPending",
	500:  "TiKvGrpcio",
	501:  "TiKvSnapshot",
	502:  "TiKvTlsEngine",
	503:  "TiKvCollectMetrics",
	504:  "TiKvProposeReadRaftCommand",
	505:  "TiKvPeerMessage",
	506:  "TiKvStoreMessage",
	1000: "TiKvCoprocessor",
	1001: "TiKvCoprTaskPending",
	1002: "TiKvCoprParseRequest",
	1003: "TiKvCoprGetSnapshot",
	1004: "TiKvCoprHandleRequest",
	1005: "TiKvCoprHandleRequestReschedule",
	1006: "TiKvCoprSelectionExecutorNextBatch",
	1007: "TiKvCoprLimitExecutorNextBatch",
	1009: "TiKvCoprTableScanExecutorNextBatch",
	1010: "TiKvCoprIndexScanExecutorNextBatch",
	1011: "TiKvCoprTopNExecutorNextBatch",
	1012: "TiKvCoprStreamAggrExecutorNextBatch",
	1013: "TiKvCoprFastHashAggrExecutorNextBatch",
	1014: "TiKvCoprSimpleAggrExecutorNextBatch",
	1015: "TiKvCoprSlowHashAggrExecutorNextBatch",
	1016: "TiKvCoprocessorPending",
	1017: "TiKvCoprocessorBuildFuture",
	1100: "TiKvRawGet",
	1101: "TiKvRawGetPending",
	1102: "TiKvRawGetBuildFuture",
	1103: "TiKvRawGetTask",
	1104: "TiKvRawGetKeyValue",
	1200: "TiKvScheduleWriteTask",
	1201: "TiKvEngineRunner",
	1203: "TiKvEngineDelete",
	1205: "TiKvEnginePut",
	1207: "TiKvEngineDeleteRange",
	1208: "TiKvRaftKvAsyncWrite",
	1209: "TiKvRaftKvExecWriteRequests",
	1216: "TiKvRaftKvExecWriteRequestsCallback",
	1217: "TiKvHandlePeerRaftMessage",
	1218: "TiKvHandlePeerRaftCommand",
	1219: "TiKvStoreMessageDispatching",
	1220: "TiKvPeerMessageDispatching",
	1221: "TiKvCallbackPending",
	1222: "TiKvHandleStoreRaftMessage",
	1204: "TiKvRawPut",
	1223: "TiKvRawPutPending",
	1224: "TiKvRawPutBuildFuture",
	1202: "TiKvRawDelete",
	1225: "TiKvRawDeletePending",
	1226: "TiKvRawDeleteBuildFuture",
	1206: "TiKvRawDeleteRange",
	1227: "TiKvRawDeleteRangePending",
	1228: "TiKvRawDeleteRangeBuildFuture",
	1210: "TiKvRaftStoreOnWriteResult",
	1211: "TiKvRaftStoreFsmPeerHandleMsg",
	1212: "TiKvRaftStoreSendCommandTxnExtra",
	1213: "TiKvRaftStoreRaftCommand",
	1214: "TiKvRaftStoreProposeRaftCommand",
	1215: "TiKvRaftStoreRaftRouterSendCommand",
	1229: "TiKvRaftStorePeerFsmHandleMessage",
	1300: "TiKvPrewrite",
	1311: "TiKvPrewritePending",
	1312: "TiKvPrewriteBuildFuture",
	1301: "TiKvCommit",
	1313: "TiKvCommitPending",
	1314: "TiKvCommitBuildFuture",
	1302: "TiKvGet",
	1315: "TiKvGetPending",
	1316: "TiKvGetBuildFuture",
	1303: "TiKvScan",
	1317: "TiKvScanPending",
	1318: "TiKvScanBuildFuture",
	1306: "TiKvCleanup",
	1319: "TiKvCleanupPending",
	1320: "TiKvCleanupBuildFuture",
	1304: "TiKvPessimisticLock",
	1321: "TiKvPessimisticLockPending",
	1322: "TiKvPessimisticLockBuildFuture",
	1305: "TiKvPessimisticRollback",
	1323: "TiKvPessimisticRollbackPending",
	1324: "TiKvPessimisticRollbackBuildFuture",
	1307: "TiKvBatchGet",
	1325: "TiKvBatchGetPending",
	1326: "TiKvBatchGetBuildFuture",
	1308: "TiKvBatchRollback",
	1327: "TiKvBatchRollbackPending",
	1328: "TiKvBatchRollbackBuildFuture",
	1309: "TiKvGc",
	1329: "TiKvGcPending",
	1330: "TiKvGcBuildFuture",
	1310: "TiKvScanLock",
	1331: "TiKvScanLockPending",
	1332: "TiKvScanLockBuildFuture",
	1400: "TiKvTxnTaskDispatching",
	1401: "TiKvTxnGetSnapShot",
	1403: "TiKvTxnProcess",
	1402: "TiKvTxnProcessPending",
	1411: "TiKvTxnProcessRead",
	1404: "TiKvTxnProcessWrite",
	1405: "TiKvMvccPrewriteMutation",
	1407: "TiKvTxnFinishWithErr",
	1408: "TiKvTxnOnReadFinished",
	1409: "TiKvTxnOnWriteFinished",
	1410: "TiKvTxnOnWaitForLock",
	1412: "TiKvTxnOnPipelinedWrite",
}
var TracingEvent_value = map[string]int32{
	"Unknown":                               0,
	"TiKvGrpcioPending":                     499,
	"TiKvGrpcio":                            500,
	"TiKvSnapshot":                          501,
	"TiKvTlsEngine":                         502,
	"TiKvCollectMetrics":                    503,
	"TiKvProposeReadRaftCommand":            504,
	"TiKvPeerMessage":                       505,
	"TiKvStoreMessage":                      506,
	"TiKvCoprocessor":                       1000,
	"TiKvCoprTaskPending":                   1001,
	"TiKvCoprParseRequest":                  1002,
	"TiKvCoprGetSnapshot":                   1003,
	"TiKvCoprHandleRequest":                 1004,
	"TiKvCoprHandleRequestReschedule":       1005,
	"TiKvCoprSelectionExecutorNextBatch":    1006,
	"TiKvCoprLimitExecutorNextBatch":        1007,
	"TiKvCoprTableScanExecutorNextBatch":    1009,
	"TiKvCoprIndexScanExecutorNextBatch":    1010,
	"TiKvCoprTopNExecutorNextBatch":         1011,
	"TiKvCoprStreamAggrExecutorNextBatch":   1012,
	"TiKvCoprFastHashAggrExecutorNextBatch": 1013,
	"TiKvCoprSimpleAggrExecutorNextBatch":   1014,
	"TiKvCoprSlowHashAggrExecutorNextBatch": 1015,
	"TiKvCoprocessorPending":                1016,
	"TiKvCoprocessorBuildFuture":            1017,
	"TiKvRawGet":                            1100,
	"TiKvRawGetPending":                     1101,
	"TiKvRawGetBuildFuture":                 1102,
	"TiKvRawGetTask":                        1103,
	"TiKvRawGetKeyValue":                    1104,
	"TiKvScheduleWriteTask":                 1200,
	"TiKvEngineRunner":                      1201,
	"TiKvEngineDelete":                      1203,
	"TiKvEnginePut":                         1205,
	"TiKvEngineDeleteRange":                 1207,
	"TiKvRaftKvAsyncWrite":                  1208,
	"TiKvRaftKvExecWriteRequests":           1209,
	"TiKvRaftKvExecWriteRequestsCallback":   1216,
	"TiKvHandlePeerRaftMessage":             1217,
	"TiKvHandlePeerRaftCommand":             1218,
	"TiKvStoreMessageDispatching":           1219,
	"TiKvPeerMessageDispatching":            1220,
	"TiKvCallbackPending":                   1221,
	"TiKvHandleStoreRaftMessage":            1222,
	"TiKvRawPut":                            1204,
	"TiKvRawPutPending":                     1223,
	"TiKvRawPutBuildFuture":                 1224,
	"TiKvRawDelete":                         1202,
	"TiKvRawDeletePending":                  1225,
	"TiKvRawDeleteBuildFuture":              1226,
	"TiKvRawDeleteRange":                    1206,
	"TiKvRawDeleteRangePending":             1227,
	"TiKvRawDeleteRangeBuildFuture":         1228,
	"TiKvRaftStoreOnWriteResult":            1210,
	"TiKvRaftStoreFsmPeerHandleMsg":         1211,
	"TiKvRaftStoreSendCommandTxnExtra":      1212,
	"TiKvRaftStoreRaftCommand":              1213,
	"TiKvRaftStoreProposeRaftCommand":       1214,
	"TiKvRaftStoreRaftRouterSendCommand":    1215,
	"TiKvRaftStorePeerFsmHandleMessage":     1229,
	"TiKvPrewrite":                          1300,
	"TiKvPrewritePending":                   1311,
	"TiKvPrewriteBuildFuture":               1312,
	"TiKvCommit":                            1301,
	"TiKvCommitPending":                     1313,
	"TiKvCommitBuildFuture":                 1314,
	"TiKvGet":                               1302,
	"TiKvGetPending":                        1315,
	"TiKvGetBuildFuture":                    1316,
	"TiKvScan":                              1303,
	"TiKvScanPending":                       1317,
	"TiKvScanBuildFuture":                   1318,
	"TiKvCleanup":                           1306,
	"TiKvCleanupPending":                    1319,
	"TiKvCleanupBuildFuture":                1320,
	"TiKvPessimisticLock":                   1304,
	"TiKvPessimisticLockPending":            1321,
	"TiKvPessimisticLockBuildFuture":        1322,
	"TiKvPessimisticRollback":               1305,
	"TiKvPessimisticRollbackPending":        1323,
	"TiKvPessimisticRollbackBuildFuture":    1324,
	"TiKvBatchGet":                          1307,
	"TiKvBatchGetPending":                   1325,
	"TiKvBatchGetBuildFuture":               1326,
	"TiKvBatchRollback":                     1308,
	"TiKvBatchRollbackPending":              1327,
	"TiKvBatchRollbackBuildFuture":          1328,
	"TiKvGc":                                1309,
	"TiKvGcPending":                         1329,
	"TiKvGcBuildFuture":                     1330,
	"TiKvScanLock":                          1310,
	"TiKvScanLockPending":                   1331,
	"TiKvScanLockBuildFuture":               1332,
	"TiKvTxnTaskDispatching":                1400,
	"TiKvTxnGetSnapShot":                    1401,
	"TiKvTxnProcess":                        1403,
	"TiKvTxnProcessPending":                 1402,
	"TiKvTxnProcessRead":                    1411,
	"TiKvTxnProcessWrite":                   1404,
	"TiKvMvccPrewriteMutation":              1405,
	"TiKvTxnFinishWithErr":                  1407,
	"TiKvTxnOnReadFinished":                 1408,
	"TiKvTxnOnWriteFinished":                1409,
	"TiKvTxnOnWaitForLock":                  1410,
	"TiKvTxnOnPipelinedWrite":               1412,
}

func (x TracingEvent) Enum() *TracingEvent {
	p := new(TracingEvent)
	*p = x
	return p
}
func (x TracingEvent) String() string {
	return proto.EnumName(TracingEvent_name, int32(x))
}
func (x *TracingEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TracingEvent_value, data, "TracingEvent")
	if err != nil {
		return err
	}
	*x = TracingEvent(value)
	return nil
}
func (TracingEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptorTracing, []int{0} }

type TracingProperty_Key int32

const (
	TracingProperty_Unknown TracingProperty_Key = 0
	TracingProperty_Foo     TracingProperty_Key = 1000
)

var TracingProperty_Key_name = map[int32]string{
	0:    "Unknown",
	1000: "Foo",
}
var TracingProperty_Key_value = map[string]int32{
	"Unknown": 0,
	"Foo":     1000,
}

func (x TracingProperty_Key) Enum() *TracingProperty_Key {
	p := new(TracingProperty_Key)
	*p = x
	return p
}
func (x TracingProperty_Key) String() string {
	return proto.EnumName(TracingProperty_Key_name, int32(x))
}
func (x *TracingProperty_Key) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TracingProperty_Key_value, data, "TracingProperty_Key")
	if err != nil {
		return err
	}
	*x = TracingProperty_Key(value)
	return nil
}
func (TracingProperty_Key) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorTracing, []int{0, 0}
}

type TracingProperty struct {
	Key              *TracingProperty_Key `protobuf:"varint,1,req,name=key,enum=tipb.TracingProperty_Key" json:"key,omitempty"`
	Value            *string              `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *TracingProperty) Reset()                    { *m = TracingProperty{} }
func (m *TracingProperty) String() string            { return proto.CompactTextString(m) }
func (*TracingProperty) ProtoMessage()               {}
func (*TracingProperty) Descriptor() ([]byte, []int) { return fileDescriptorTracing, []int{0} }

func (m *TracingProperty) GetKey() TracingProperty_Key {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return TracingProperty_Unknown
}

func (m *TracingProperty) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*TracingProperty)(nil), "tipb.TracingProperty")
	proto.RegisterEnum("tipb.TracingEvent", TracingEvent_name, TracingEvent_value)
	proto.RegisterEnum("tipb.TracingProperty_Key", TracingProperty_Key_name, TracingProperty_Key_value)
}
func (m *TracingProperty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TracingProperty) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Key == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintTracing(dAtA, i, uint64(*m.Key))
	}
	if m.Value == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintTracing(dAtA, i, uint64(len(*m.Value)))
		i += copy(dAtA[i:], *m.Value)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintTracing(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *TracingProperty) Size() (n int) {
	var l int
	_ = l
	if m.Key != nil {
		n += 1 + sovTracing(uint64(*m.Key))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 1 + l + sovTracing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTracing(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTracing(x uint64) (n int) {
	return sovTracing(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TracingProperty) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTracing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TracingProperty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TracingProperty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var v TracingProperty_Key
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTracing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (TracingProperty_Key(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Key = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTracing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTracing
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipTracing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTracing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTracing(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTracing
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTracing
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTracing
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTracing
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTracing
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTracing(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTracing = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTracing   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("tracing.proto", fileDescriptorTracing) }

var fileDescriptorTracing = []byte{
	// 1351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x57, 0x59, 0x73, 0x13, 0xc7,
	0x16, 0xc6, 0xe8, 0xde, 0x3b, 0x9e, 0x23, 0x96, 0xa6, 0x31, 0x60, 0x36, 0x63, 0xcc, 0x25, 0x21,
	0xa4, 0xca, 0xa9, 0xca, 0x3f, 0x00, 0x63, 0x99, 0x94, 0x31, 0xa8, 0x24, 0x25, 0x3c, 0xb7, 0x47,
	0x1d, 0xb9, 0xcb, 0xa3, 0x1e, 0x65, 0xa6, 0xc7, 0x96, 0xdf, 0xb2, 0xfd, 0x84, 0x2c, 0x64, 0xdf,
	0xf7, 0x8d, 0x2d, 0x0b, 0xd9, 0xf7, 0x90, 0x04, 0x12, 0x7e, 0x42, 0x8a, 0xbc, 0x90, 0xbd, 0x12,
	0x76, 0x92, 0x54, 0x52, 0x3d, 0x33, 0xa7, 0xd5, 0x63, 0x8b, 0x37, 0xeb, 0x7c, 0x5f, 0x7f, 0xdd,
	0x7d, 0xce, 0x77, 0x4e, 0x8f, 0x61, 0xa9, 0x0a, 0x99, 0x27, 0x64, 0x63, 0xb8, 0x15, 0x06, 0x2a,
	0xa0, 0xff, 0x51, 0xa2, 0x35, 0xb9, 0xae, 0xaf, 0x11, 0x34, 0x82, 0x24, 0x70, 0x83, 0xfe, 0x2b,
	0xc5, 0x86, 0x42, 0x58, 0x5e, 0x4b, 0xc9, 0xe5, 0x30, 0x68, 0xf1, 0x50, 0xcd, 0xd1, 0xeb, 0xa1,
	0x30, 0xcd, 0xe7, 0xfa, 0x7b, 0x06, 0x17, 0x6f, 0x5b, 0x76, 0xe3, 0xda, 0x61, 0xbd, 0x78, 0x78,
	0x1e, 0x67, 0x78, 0x9c, 0xcf, 0x55, 0x34, 0x8b, 0xf6, 0xc1, 0x7f, 0x67, 0x98, 0x1f, 0xf3, 0xfe,
	0xc5, 0x83, 0x8b, 0xb7, 0xb9, 0x95, 0xf4, 0xc7, 0xd0, 0x06, 0x28, 0x8c, 0xf3, 0x39, 0x5a, 0x04,
	0xe7, 0x66, 0x39, 0x2d, 0x83, 0x59, 0x49, 0x16, 0xd1, 0x5e, 0x28, 0x94, 0x82, 0x80, 0x9c, 0x71,
	0xb6, 0x1f, 0x5b, 0x03, 0x4b, 0x32, 0xc1, 0xd1, 0x19, 0x2e, 0x55, 0x9e, 0xb7, 0x1a, 0x56, 0xd4,
	0xc4, 0xf8, 0xcc, 0x58, 0xd8, 0xf2, 0x44, 0x50, 0xe6, 0xb2, 0x2e, 0x64, 0x83, 0x9c, 0x2d, 0xd0,
	0xe5, 0x00, 0x9d, 0x38, 0x39, 0x57, 0xa0, 0x2b, 0x60, 0x89, 0x0e, 0x54, 0x25, 0x6b, 0x45, 0x53,
	0x81, 0x22, 0xe7, 0x0b, 0x94, 0xc2, 0x52, 0x1d, 0xaa, 0xf9, 0xd1, 0xa8, 0x6c, 0x08, 0xc9, 0xc9,
	0x85, 0x02, 0x5d, 0x03, 0x54, 0xc7, 0x46, 0x02, 0xdf, 0xe7, 0x9e, 0x9a, 0xe0, 0x2a, 0x14, 0x5e,
	0x44, 0x2e, 0x16, 0xe8, 0x26, 0x58, 0xa7, 0x01, 0x7d, 0xa7, 0x20, 0xe2, 0x15, 0xce, 0xea, 0x15,
	0x76, 0xab, 0x1a, 0x09, 0x9a, 0x4d, 0x26, 0xeb, 0xe4, 0x52, 0x81, 0xf6, 0xc1, 0xf2, 0x84, 0xc0,
	0x79, 0x38, 0xc1, 0xa3, 0x88, 0x35, 0x38, 0xb9, 0x5c, 0xa0, 0xab, 0x80, 0x24, 0xdb, 0xaa, 0x20,
	0xe4, 0x18, 0xbe, 0x62, 0xc8, 0x23, 0x3a, 0xc5, 0x1e, 0x8f, 0xa2, 0x20, 0x24, 0x67, 0x1c, 0xda,
	0x0f, 0x2b, 0x31, 0x5a, 0x63, 0xd1, 0x34, 0x5e, 0xe7, 0x07, 0x87, 0xae, 0x85, 0x3e, 0x44, 0xca,
	0x2c, 0xd4, 0xfb, 0xdf, 0x16, 0xf3, 0x48, 0x91, 0x1f, 0x73, 0x8b, 0xc6, 0xb8, 0x32, 0xf7, 0xfb,
	0xc9, 0xa1, 0xeb, 0x60, 0x15, 0x22, 0xbb, 0x99, 0xac, 0xfb, 0x66, 0xd5, 0xcf, 0x0e, 0xfd, 0x3f,
	0x6c, 0xea, 0x8a, 0x55, 0x78, 0xe4, 0x4d, 0xf1, 0x7a, 0xec, 0x73, 0xf2, 0x8b, 0x43, 0xaf, 0x85,
	0x21, 0x64, 0x55, 0xb9, 0x4e, 0x88, 0x08, 0xe4, 0x68, 0x9b, 0x7b, 0xb1, 0x0a, 0xc2, 0xbd, 0xbc,
	0xad, 0x76, 0x32, 0xe5, 0x4d, 0x91, 0x5f, 0x1d, 0xba, 0x05, 0x06, 0x90, 0xb8, 0x47, 0x34, 0x85,
	0x5a, 0x48, 0xfa, 0x2d, 0xa7, 0x56, 0x63, 0x93, 0x3e, 0xaf, 0x7a, 0xac, 0x8b, 0xda, 0xef, 0x39,
	0xe2, 0x4d, 0xb2, 0xce, 0xdb, 0xdd, 0x89, 0x7f, 0x38, 0x74, 0x08, 0x36, 0x1a, 0xc5, 0xa0, 0xb5,
	0x77, 0x21, 0xe7, 0xac, 0x43, 0xb7, 0xc1, 0x16, 0x73, 0x07, 0x15, 0x72, 0xd6, 0xdc, 0xd1, 0x68,
	0x84, 0x0b, 0x99, 0xe7, 0x1c, 0xba, 0x1d, 0xb6, 0x22, 0xb3, 0xc4, 0x22, 0xb5, 0x9b, 0x45, 0x53,
	0xdd, 0xb9, 0xe7, 0xf3, 0xaa, 0xa2, 0xd9, 0xf2, 0x79, 0x77, 0xe6, 0x85, 0x9c, 0x6a, 0xd5, 0x0f,
	0x66, 0xaf, 0xae, 0x7a, 0xd1, 0xa1, 0xeb, 0x61, 0xf5, 0x3c, 0x5b, 0xa0, 0x07, 0x2e, 0x39, 0xe8,
	0x40, 0x0b, 0xdc, 0x19, 0x0b, 0xbf, 0x5e, 0x8a, 0x55, 0x1c, 0x72, 0x72, 0xd9, 0x41, 0xcf, 0x57,
	0xd8, 0xec, 0x18, 0x57, 0xe4, 0x44, 0x2f, 0x36, 0x47, 0x1a, 0x40, 0xa5, 0x93, 0xbd, 0x68, 0x8c,
	0x34, 0x6e, 0x8b, 0x7c, 0xd3, 0x4b, 0x57, 0xc2, 0xb2, 0x0e, 0xa6, 0x5d, 0x48, 0xbe, 0xed, 0xc5,
	0xae, 0x48, 0x83, 0xe3, 0x7c, 0xee, 0x16, 0xdd, 0xb7, 0xe4, 0x94, 0x51, 0xaa, 0x66, 0x9e, 0xd9,
	0x1f, 0x0a, 0xc5, 0x93, 0x45, 0x07, 0x5d, 0xb4, 0x7e, 0xda, 0x5b, 0x95, 0x58, 0x4a, 0x1e, 0x92,
	0x43, 0xf3, 0xc2, 0xbb, 0xb8, 0xcf, 0x15, 0x27, 0x47, 0x5c, 0x6c, 0xc6, 0x34, 0x5c, 0x8e, 0x15,
	0x79, 0xdd, 0x45, 0x75, 0x9b, 0x5a, 0x61, 0xb2, 0xc1, 0xc9, 0x9b, 0x2e, 0x76, 0x84, 0x6e, 0xc2,
	0xf1, 0x99, 0x1d, 0xd1, 0x9c, 0xf4, 0x92, 0xcd, 0xc9, 0x5b, 0x2e, 0x1d, 0x84, 0xf5, 0x1d, 0x48,
	0xe7, 0x39, 0x41, 0x32, 0x83, 0x47, 0xe4, 0x98, 0x8b, 0xd5, 0xbb, 0x0a, 0x63, 0x84, 0xf9, 0xfe,
	0x24, 0xf3, 0xa6, 0xc9, 0x87, 0x2e, 0x1d, 0x80, 0xb5, 0x9a, 0x99, 0xf6, 0x88, 0xee, 0x6d, 0xbd,
	0x06, 0x1b, 0xf9, 0xa3, 0xab, 0xe0, 0x38, 0x15, 0x3e, 0x36, 0x67, 0xb1, 0xfb, 0x7f, 0x97, 0x88,
	0x5a, 0xba, 0xe0, 0xba, 0x18, 0x9f, 0xb8, 0x66, 0xb0, 0x74, 0xe6, 0x86, 0x4d, 0xf8, 0xd4, 0x35,
	0x0d, 0x9e, 0x9d, 0x0a, 0xeb, 0xf8, 0x99, 0x59, 0x9a, 0x6e, 0x9e, 0x6c, 0x61, 0x9f, 0xee, 0x73,
	0xd7, 0x72, 0x84, 0xce, 0xe8, 0x51, 0xd7, 0x72, 0x44, 0x39, 0x36, 0x8e, 0xf8, 0xc2, 0xb5, 0x1c,
	0x51, 0x8e, 0x73, 0x8e, 0x38, 0x6e, 0x2a, 0x53, 0x61, 0xb3, 0x59, 0xb5, 0x0e, 0x5b, 0xd9, 0xcf,
	0x62, 0x28, 0xf5, 0xa5, 0x4b, 0x37, 0x42, 0x7f, 0x0e, 0xb2, 0xd5, 0xbe, 0x72, 0x2d, 0x2b, 0xd9,
	0x05, 0x7d, 0xc3, 0x64, 0x32, 0x0f, 0xa0, 0xee, 0xd7, 0x2e, 0xf6, 0x7a, 0x1e, 0xb7, 0xc5, 0x4f,
	0x98, 0x84, 0xe8, 0x2c, 0x24, 0xe9, 0xd8, 0x27, 0xb3, 0xc2, 0x46, 0xb1, 0xaf, 0xc8, 0xdb, 0x96,
	0x48, 0x46, 0x28, 0x45, 0x4d, 0x9d, 0xf8, 0x34, 0x83, 0x13, 0x51, 0x83, 0xbc, 0xe3, 0xd2, 0xad,
	0x30, 0x98, 0xe3, 0x54, 0xb9, 0xac, 0x67, 0x15, 0xad, 0xb5, 0xe5, 0x68, 0x5b, 0x85, 0x8c, 0xbc,
	0x6b, 0xdd, 0x33, 0xa3, 0xd9, 0x85, 0x7f, 0xcf, 0xc5, 0x01, 0x6b, 0x60, 0x7c, 0x38, 0x2c, 0xd6,
	0xfb, 0x2e, 0x4e, 0xba, 0x9c, 0x48, 0x25, 0x88, 0x15, 0x0f, 0xad, 0x5d, 0xc9, 0x07, 0x2e, 0xbd,
	0x06, 0x36, 0xe7, 0xe5, 0x38, 0x0f, 0x4b, 0x51, 0x33, 0x3b, 0x78, 0x56, 0xf1, 0x93, 0x2e, 0x3e,
	0x73, 0xe5, 0x90, 0xcf, 0x26, 0xed, 0x70, 0x0f, 0xa0, 0x7f, 0x30, 0x84, 0x29, 0x7d, 0x0c, 0xe8,
	0x06, 0x58, 0x63, 0x23, 0x76, 0x32, 0x1f, 0x07, 0x34, 0x8f, 0x3e, 0x84, 0x50, 0xe4, 0x5e, 0x40,
	0xf3, 0xa4, 0x01, 0x94, 0x79, 0x02, 0x3a, 0xef, 0x8c, 0x8e, 0xdb, 0x22, 0x4f, 0x02, 0x5d, 0x02,
	0x4e, 0xf2, 0x0e, 0x73, 0x45, 0xee, 0x03, 0x1c, 0x2e, 0xd6, 0x34, 0x7a, 0x0a, 0xd0, 0x11, 0xf3,
	0x46, 0xd1, 0xd3, 0x40, 0x97, 0x42, 0x6f, 0x3a, 0x5c, 0x98, 0x24, 0xf7, 0x03, 0xbe, 0x99, 0xfa,
	0x27, 0xae, 0x7e, 0xc6, 0xdc, 0x4e, 0x47, 0xed, 0xe5, 0xcf, 0x02, 0x25, 0x50, 0x4c, 0x8e, 0xe5,
	0x73, 0x26, 0xe3, 0x16, 0x79, 0xd0, 0xec, 0x94, 0x45, 0x50, 0xe4, 0x39, 0x30, 0x73, 0x37, 0x05,
	0x6c, 0x9d, 0xe7, 0x3b, 0xf9, 0xe3, 0x51, 0x24, 0x9a, 0x22, 0x52, 0xc2, 0xdb, 0x13, 0x78, 0xd3,
	0xe4, 0x00, 0x74, 0x5a, 0x37, 0x87, 0xa0, 0xee, 0x0b, 0x80, 0xcf, 0xe2, 0x3c, 0x82, 0xad, 0xff,
	0x62, 0xa7, 0x0a, 0x1d, 0x52, 0x25, 0xc8, 0x06, 0xd0, 0x03, 0xdd, 0x24, 0x10, 0xc5, 0x7d, 0x5e,
	0x02, 0xb4, 0x51, 0x17, 0x92, 0xbd, 0xd7, 0xcb, 0x80, 0xf6, 0x48, 0x1e, 0x1c, 0x5d, 0x93, 0x87,
	0xcc, 0xf5, 0x30, 0x84, 0xaa, 0xaf, 0x98, 0x83, 0x21, 0x62, 0x4b, 0xbd, 0x6a, 0xdc, 0x90, 0xa0,
	0xe6, 0xc0, 0x0f, 0x03, 0xf6, 0x45, 0x2e, 0x8e, 0xa2, 0xaf, 0x01, 0xdd, 0x0c, 0x1b, 0x16, 0xc0,
	0xb6, 0xf2, 0x41, 0xa0, 0x45, 0xf8, 0x5f, 0x62, 0x08, 0x8f, 0x3c, 0x02, 0x38, 0x7d, 0xc6, 0x3c,
	0xd4, 0x38, 0x64, 0xb6, 0x1e, 0xf3, 0xec, 0x85, 0x87, 0xcd, 0xed, 0xb4, 0x17, 0x92, 0x12, 0x3d,
	0x9a, 0xb3, 0x87, 0x5d, 0x9b, 0x23, 0xe6, 0x76, 0x88, 0xd8, 0x52, 0x47, 0x8d, 0x23, 0x6a, 0x6d,
	0xa9, 0x9f, 0x33, 0x7b, 0x22, 0x5f, 0x32, 0x3e, 0xaa, 0xb5, 0x65, 0xf6, 0xc5, 0x55, 0xd5, 0x5f,
	0x5c, 0x97, 0x8d, 0xbf, 0x6b, 0x6d, 0x59, 0x4e, 0xdf, 0x68, 0xf2, 0xa7, 0x69, 0x8f, 0x4e, 0x10,
	0x0f, 0x71, 0xc5, 0x56, 0xca, 0x30, 0xfd, 0x61, 0x49, 0xee, 0x2a, 0xe2, 0xb9, 0x3b, 0x40, 0xfa,
	0xba, 0xfd, 0x65, 0xf2, 0x3b, 0x31, 0xe3, 0x79, 0xd8, 0xb8, 0x13, 0xb1, 0x62, 0xfa, 0xd3, 0x8c,
	0xfc, 0x0d, 0x38, 0x99, 0x6b, 0x6d, 0x59, 0x12, 0x52, 0x44, 0x53, 0xfb, 0x85, 0x9a, 0x1a, 0x0d,
	0x43, 0xf2, 0x8f, 0x7d, 0x90, 0x7d, 0x52, 0xef, 0x93, 0x12, 0x78, 0x9d, 0xdc, 0x5e, 0xb4, 0xee,
	0x9b, 0xcd, 0x4c, 0x03, 0xde, 0x51, 0xb4, 0x34, 0xf7, 0xc9, 0xfd, 0x4c, 0xa8, 0x52, 0x10, 0x26,
	0xf9, 0xbd, 0xb3, 0x88, 0x59, 0x4c, 0xa0, 0xb2, 0x68, 0x71, 0x5f, 0x48, 0x5e, 0x4f, 0xcf, 0x7a,
	0x77, 0x71, 0xe7, 0x75, 0xc7, 0x4f, 0x0f, 0xf4, 0x9c, 0x3a, 0x3d, 0xd0, 0xf3, 0xdd, 0xe9, 0x81,
	0x9e, 0x03, 0xdf, 0x0f, 0x2c, 0x82, 0x55, 0x5e, 0xd0, 0x1c, 0x6e, 0x09, 0xd9, 0xf0, 0x58, 0x6b,
	0x58, 0x89, 0xfa, 0x64, 0xf2, 0x1f, 0x43, 0xb9, 0xe7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x14,
	0x85, 0x1c, 0x58, 0x86, 0x0c, 0x00, 0x00,
}
